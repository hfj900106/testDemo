<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hzed.easyget.persistence.auto.mapper.BillMapper">
  <resultMap id="BaseResultMap" type="com.hzed.easyget.persistence.auto.entity.Bill">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="bid_id" jdbcType="BIGINT" property="bidId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="periods" jdbcType="TINYINT" property="periods" />
    <result column="repayment_time" jdbcType="TIMESTAMP" property="repaymentTime" />
    <result column="repayment_corpus" jdbcType="DECIMAL" property="repaymentCorpus" />
    <result column="repayment_interest" jdbcType="DOUBLE" property="repaymentInterest" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="mer_bill_no" jdbcType="VARCHAR" property="merBillNo" />
    <result column="repayment_bill_no" jdbcType="VARCHAR" property="repaymentBillNo" />
    <result column="real_repayment_time" jdbcType="TIMESTAMP" property="realRepaymentTime" />
    <result column="real_repayment_corpus" jdbcType="DECIMAL" property="realRepaymentCorpus" />
    <result column="real_repayment_interest" jdbcType="DECIMAL" property="realRepaymentInterest" />
    <result column="overdue_mark" jdbcType="TINYINT" property="overdueMark" />
    <result column="mark_overdue_time" jdbcType="TIMESTAMP" property="markOverdueTime" />
    <result column="overdue_fine" jdbcType="DECIMAL" property="overdueFine" />
    <result column="mark_bad_time" jdbcType="TIMESTAMP" property="markBadTime" />
    <result column="notice_count_message" jdbcType="INTEGER" property="noticeCountMessage" />
    <result column="notice_count_mail" jdbcType="INTEGER" property="noticeCountMail" />
    <result column="notice_count_telphone" jdbcType="INTEGER" property="noticeCountTelphone" />
    <result column="ips_status" jdbcType="TINYINT" property="ipsStatus" />
    <result column="audit_free" jdbcType="DOUBLE" property="auditFree" />
    <result column="service_free" jdbcType="DOUBLE" property="serviceFree" />
    <result column="advance_repay_fee" jdbcType="DOUBLE" property="advanceRepayFee" />
    <result column="overdue_fine_fee" jdbcType="DOUBLE" property="overdueFineFee" />
    <result column="overdue_free" jdbcType="DOUBLE" property="overdueFree" />
    <result column="overdue_interest_free" jdbcType="DOUBLE" property="overdueInterestFree" />
    <result column="push_status" jdbcType="TINYINT" property="pushStatus" />
    <result column="push_time" jdbcType="TIMESTAMP" property="pushTime" />
    <result column="push_error_message" jdbcType="VARCHAR" property="pushErrorMessage" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, bid_id, title, periods, repayment_time, repayment_corpus, repayment_interest, 
    status, mer_bill_no, repayment_bill_no, real_repayment_time, real_repayment_corpus, 
    real_repayment_interest, overdue_mark, mark_overdue_time, overdue_fine, mark_bad_time, 
    notice_count_message, notice_count_mail, notice_count_telphone, ips_status, audit_free, 
    service_free, advance_repay_fee, overdue_fine_fee, overdue_free, overdue_interest_free, 
    push_status, push_time, push_error_message
  </sql>
  <select id="selectByExample" parameterType="com.hzed.easyget.persistence.auto.entity.example.BillExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_bills
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    select
    <if test="example.distinct">
      distinct
    </if>
    <foreach collection="selective" item="column" separator=",">
      ${column.value}
    </foreach>
    from t_bills
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_bills
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="BaseResultMap">
    select
    <foreach collection="selective" item="column" separator=",">
      ${column.value}
    </foreach>
    from t_bills
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_bills
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.hzed.easyget.persistence.auto.entity.example.BillExample">
    delete from t_bills
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hzed.easyget.persistence.auto.entity.Bill">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_bills (bid_id, title, periods, 
      repayment_time, repayment_corpus, repayment_interest, 
      status, mer_bill_no, repayment_bill_no, 
      real_repayment_time, real_repayment_corpus, 
      real_repayment_interest, overdue_mark, mark_overdue_time, 
      overdue_fine, mark_bad_time, notice_count_message, 
      notice_count_mail, notice_count_telphone, ips_status, 
      audit_free, service_free, advance_repay_fee, 
      overdue_fine_fee, overdue_free, overdue_interest_free, 
      push_status, push_time, push_error_message
      )
    values (#{bidId,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, #{periods,jdbcType=TINYINT}, 
      #{repaymentTime,jdbcType=TIMESTAMP}, #{repaymentCorpus,jdbcType=DECIMAL}, #{repaymentInterest,jdbcType=DOUBLE}, 
      #{status,jdbcType=TINYINT}, #{merBillNo,jdbcType=VARCHAR}, #{repaymentBillNo,jdbcType=VARCHAR}, 
      #{realRepaymentTime,jdbcType=TIMESTAMP}, #{realRepaymentCorpus,jdbcType=DECIMAL}, 
      #{realRepaymentInterest,jdbcType=DECIMAL}, #{overdueMark,jdbcType=TINYINT}, #{markOverdueTime,jdbcType=TIMESTAMP}, 
      #{overdueFine,jdbcType=DECIMAL}, #{markBadTime,jdbcType=TIMESTAMP}, #{noticeCountMessage,jdbcType=INTEGER}, 
      #{noticeCountMail,jdbcType=INTEGER}, #{noticeCountTelphone,jdbcType=INTEGER}, #{ipsStatus,jdbcType=TINYINT}, 
      #{auditFree,jdbcType=DOUBLE}, #{serviceFree,jdbcType=DOUBLE}, #{advanceRepayFee,jdbcType=DOUBLE}, 
      #{overdueFineFee,jdbcType=DOUBLE}, #{overdueFree,jdbcType=DOUBLE}, #{overdueInterestFree,jdbcType=DOUBLE}, 
      #{pushStatus,jdbcType=TINYINT}, #{pushTime,jdbcType=TIMESTAMP}, #{pushErrorMessage,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hzed.easyget.persistence.auto.entity.Bill">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_bills
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="bidId != null">
        bid_id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="periods != null">
        periods,
      </if>
      <if test="repaymentTime != null">
        repayment_time,
      </if>
      <if test="repaymentCorpus != null">
        repayment_corpus,
      </if>
      <if test="repaymentInterest != null">
        repayment_interest,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="merBillNo != null">
        mer_bill_no,
      </if>
      <if test="repaymentBillNo != null">
        repayment_bill_no,
      </if>
      <if test="realRepaymentTime != null">
        real_repayment_time,
      </if>
      <if test="realRepaymentCorpus != null">
        real_repayment_corpus,
      </if>
      <if test="realRepaymentInterest != null">
        real_repayment_interest,
      </if>
      <if test="overdueMark != null">
        overdue_mark,
      </if>
      <if test="markOverdueTime != null">
        mark_overdue_time,
      </if>
      <if test="overdueFine != null">
        overdue_fine,
      </if>
      <if test="markBadTime != null">
        mark_bad_time,
      </if>
      <if test="noticeCountMessage != null">
        notice_count_message,
      </if>
      <if test="noticeCountMail != null">
        notice_count_mail,
      </if>
      <if test="noticeCountTelphone != null">
        notice_count_telphone,
      </if>
      <if test="ipsStatus != null">
        ips_status,
      </if>
      <if test="auditFree != null">
        audit_free,
      </if>
      <if test="serviceFree != null">
        service_free,
      </if>
      <if test="advanceRepayFee != null">
        advance_repay_fee,
      </if>
      <if test="overdueFineFee != null">
        overdue_fine_fee,
      </if>
      <if test="overdueFree != null">
        overdue_free,
      </if>
      <if test="overdueInterestFree != null">
        overdue_interest_free,
      </if>
      <if test="pushStatus != null">
        push_status,
      </if>
      <if test="pushTime != null">
        push_time,
      </if>
      <if test="pushErrorMessage != null">
        push_error_message,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="bidId != null">
        #{bidId,jdbcType=BIGINT},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="periods != null">
        #{periods,jdbcType=TINYINT},
      </if>
      <if test="repaymentTime != null">
        #{repaymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="repaymentCorpus != null">
        #{repaymentCorpus,jdbcType=DECIMAL},
      </if>
      <if test="repaymentInterest != null">
        #{repaymentInterest,jdbcType=DOUBLE},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="merBillNo != null">
        #{merBillNo,jdbcType=VARCHAR},
      </if>
      <if test="repaymentBillNo != null">
        #{repaymentBillNo,jdbcType=VARCHAR},
      </if>
      <if test="realRepaymentTime != null">
        #{realRepaymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="realRepaymentCorpus != null">
        #{realRepaymentCorpus,jdbcType=DECIMAL},
      </if>
      <if test="realRepaymentInterest != null">
        #{realRepaymentInterest,jdbcType=DECIMAL},
      </if>
      <if test="overdueMark != null">
        #{overdueMark,jdbcType=TINYINT},
      </if>
      <if test="markOverdueTime != null">
        #{markOverdueTime,jdbcType=TIMESTAMP},
      </if>
      <if test="overdueFine != null">
        #{overdueFine,jdbcType=DECIMAL},
      </if>
      <if test="markBadTime != null">
        #{markBadTime,jdbcType=TIMESTAMP},
      </if>
      <if test="noticeCountMessage != null">
        #{noticeCountMessage,jdbcType=INTEGER},
      </if>
      <if test="noticeCountMail != null">
        #{noticeCountMail,jdbcType=INTEGER},
      </if>
      <if test="noticeCountTelphone != null">
        #{noticeCountTelphone,jdbcType=INTEGER},
      </if>
      <if test="ipsStatus != null">
        #{ipsStatus,jdbcType=TINYINT},
      </if>
      <if test="auditFree != null">
        #{auditFree,jdbcType=DOUBLE},
      </if>
      <if test="serviceFree != null">
        #{serviceFree,jdbcType=DOUBLE},
      </if>
      <if test="advanceRepayFee != null">
        #{advanceRepayFee,jdbcType=DOUBLE},
      </if>
      <if test="overdueFineFee != null">
        #{overdueFineFee,jdbcType=DOUBLE},
      </if>
      <if test="overdueFree != null">
        #{overdueFree,jdbcType=DOUBLE},
      </if>
      <if test="overdueInterestFree != null">
        #{overdueInterestFree,jdbcType=DOUBLE},
      </if>
      <if test="pushStatus != null">
        #{pushStatus,jdbcType=TINYINT},
      </if>
      <if test="pushTime != null">
        #{pushTime,jdbcType=TIMESTAMP},
      </if>
      <if test="pushErrorMessage != null">
        #{pushErrorMessage,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hzed.easyget.persistence.auto.entity.example.BillExample" resultType="java.lang.Long">
    select count(*) from t_bills
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_bills
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.bidId != null">
        bid_id = #{record.bidId,jdbcType=BIGINT},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.periods != null">
        periods = #{record.periods,jdbcType=TINYINT},
      </if>
      <if test="record.repaymentTime != null">
        repayment_time = #{record.repaymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.repaymentCorpus != null">
        repayment_corpus = #{record.repaymentCorpus,jdbcType=DECIMAL},
      </if>
      <if test="record.repaymentInterest != null">
        repayment_interest = #{record.repaymentInterest,jdbcType=DOUBLE},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.merBillNo != null">
        mer_bill_no = #{record.merBillNo,jdbcType=VARCHAR},
      </if>
      <if test="record.repaymentBillNo != null">
        repayment_bill_no = #{record.repaymentBillNo,jdbcType=VARCHAR},
      </if>
      <if test="record.realRepaymentTime != null">
        real_repayment_time = #{record.realRepaymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.realRepaymentCorpus != null">
        real_repayment_corpus = #{record.realRepaymentCorpus,jdbcType=DECIMAL},
      </if>
      <if test="record.realRepaymentInterest != null">
        real_repayment_interest = #{record.realRepaymentInterest,jdbcType=DECIMAL},
      </if>
      <if test="record.overdueMark != null">
        overdue_mark = #{record.overdueMark,jdbcType=TINYINT},
      </if>
      <if test="record.markOverdueTime != null">
        mark_overdue_time = #{record.markOverdueTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.overdueFine != null">
        overdue_fine = #{record.overdueFine,jdbcType=DECIMAL},
      </if>
      <if test="record.markBadTime != null">
        mark_bad_time = #{record.markBadTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.noticeCountMessage != null">
        notice_count_message = #{record.noticeCountMessage,jdbcType=INTEGER},
      </if>
      <if test="record.noticeCountMail != null">
        notice_count_mail = #{record.noticeCountMail,jdbcType=INTEGER},
      </if>
      <if test="record.noticeCountTelphone != null">
        notice_count_telphone = #{record.noticeCountTelphone,jdbcType=INTEGER},
      </if>
      <if test="record.ipsStatus != null">
        ips_status = #{record.ipsStatus,jdbcType=TINYINT},
      </if>
      <if test="record.auditFree != null">
        audit_free = #{record.auditFree,jdbcType=DOUBLE},
      </if>
      <if test="record.serviceFree != null">
        service_free = #{record.serviceFree,jdbcType=DOUBLE},
      </if>
      <if test="record.advanceRepayFee != null">
        advance_repay_fee = #{record.advanceRepayFee,jdbcType=DOUBLE},
      </if>
      <if test="record.overdueFineFee != null">
        overdue_fine_fee = #{record.overdueFineFee,jdbcType=DOUBLE},
      </if>
      <if test="record.overdueFree != null">
        overdue_free = #{record.overdueFree,jdbcType=DOUBLE},
      </if>
      <if test="record.overdueInterestFree != null">
        overdue_interest_free = #{record.overdueInterestFree,jdbcType=DOUBLE},
      </if>
      <if test="record.pushStatus != null">
        push_status = #{record.pushStatus,jdbcType=TINYINT},
      </if>
      <if test="record.pushTime != null">
        push_time = #{record.pushTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.pushErrorMessage != null">
        push_error_message = #{record.pushErrorMessage,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_bills
    set id = #{record.id,jdbcType=BIGINT},
      bid_id = #{record.bidId,jdbcType=BIGINT},
      title = #{record.title,jdbcType=VARCHAR},
      periods = #{record.periods,jdbcType=TINYINT},
      repayment_time = #{record.repaymentTime,jdbcType=TIMESTAMP},
      repayment_corpus = #{record.repaymentCorpus,jdbcType=DECIMAL},
      repayment_interest = #{record.repaymentInterest,jdbcType=DOUBLE},
      status = #{record.status,jdbcType=TINYINT},
      mer_bill_no = #{record.merBillNo,jdbcType=VARCHAR},
      repayment_bill_no = #{record.repaymentBillNo,jdbcType=VARCHAR},
      real_repayment_time = #{record.realRepaymentTime,jdbcType=TIMESTAMP},
      real_repayment_corpus = #{record.realRepaymentCorpus,jdbcType=DECIMAL},
      real_repayment_interest = #{record.realRepaymentInterest,jdbcType=DECIMAL},
      overdue_mark = #{record.overdueMark,jdbcType=TINYINT},
      mark_overdue_time = #{record.markOverdueTime,jdbcType=TIMESTAMP},
      overdue_fine = #{record.overdueFine,jdbcType=DECIMAL},
      mark_bad_time = #{record.markBadTime,jdbcType=TIMESTAMP},
      notice_count_message = #{record.noticeCountMessage,jdbcType=INTEGER},
      notice_count_mail = #{record.noticeCountMail,jdbcType=INTEGER},
      notice_count_telphone = #{record.noticeCountTelphone,jdbcType=INTEGER},
      ips_status = #{record.ipsStatus,jdbcType=TINYINT},
      audit_free = #{record.auditFree,jdbcType=DOUBLE},
      service_free = #{record.serviceFree,jdbcType=DOUBLE},
      advance_repay_fee = #{record.advanceRepayFee,jdbcType=DOUBLE},
      overdue_fine_fee = #{record.overdueFineFee,jdbcType=DOUBLE},
      overdue_free = #{record.overdueFree,jdbcType=DOUBLE},
      overdue_interest_free = #{record.overdueInterestFree,jdbcType=DOUBLE},
      push_status = #{record.pushStatus,jdbcType=TINYINT},
      push_time = #{record.pushTime,jdbcType=TIMESTAMP},
      push_error_message = #{record.pushErrorMessage,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hzed.easyget.persistence.auto.entity.Bill">
    update t_bills
    <set>
      <if test="bidId != null">
        bid_id = #{bidId,jdbcType=BIGINT},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="periods != null">
        periods = #{periods,jdbcType=TINYINT},
      </if>
      <if test="repaymentTime != null">
        repayment_time = #{repaymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="repaymentCorpus != null">
        repayment_corpus = #{repaymentCorpus,jdbcType=DECIMAL},
      </if>
      <if test="repaymentInterest != null">
        repayment_interest = #{repaymentInterest,jdbcType=DOUBLE},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="merBillNo != null">
        mer_bill_no = #{merBillNo,jdbcType=VARCHAR},
      </if>
      <if test="repaymentBillNo != null">
        repayment_bill_no = #{repaymentBillNo,jdbcType=VARCHAR},
      </if>
      <if test="realRepaymentTime != null">
        real_repayment_time = #{realRepaymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="realRepaymentCorpus != null">
        real_repayment_corpus = #{realRepaymentCorpus,jdbcType=DECIMAL},
      </if>
      <if test="realRepaymentInterest != null">
        real_repayment_interest = #{realRepaymentInterest,jdbcType=DECIMAL},
      </if>
      <if test="overdueMark != null">
        overdue_mark = #{overdueMark,jdbcType=TINYINT},
      </if>
      <if test="markOverdueTime != null">
        mark_overdue_time = #{markOverdueTime,jdbcType=TIMESTAMP},
      </if>
      <if test="overdueFine != null">
        overdue_fine = #{overdueFine,jdbcType=DECIMAL},
      </if>
      <if test="markBadTime != null">
        mark_bad_time = #{markBadTime,jdbcType=TIMESTAMP},
      </if>
      <if test="noticeCountMessage != null">
        notice_count_message = #{noticeCountMessage,jdbcType=INTEGER},
      </if>
      <if test="noticeCountMail != null">
        notice_count_mail = #{noticeCountMail,jdbcType=INTEGER},
      </if>
      <if test="noticeCountTelphone != null">
        notice_count_telphone = #{noticeCountTelphone,jdbcType=INTEGER},
      </if>
      <if test="ipsStatus != null">
        ips_status = #{ipsStatus,jdbcType=TINYINT},
      </if>
      <if test="auditFree != null">
        audit_free = #{auditFree,jdbcType=DOUBLE},
      </if>
      <if test="serviceFree != null">
        service_free = #{serviceFree,jdbcType=DOUBLE},
      </if>
      <if test="advanceRepayFee != null">
        advance_repay_fee = #{advanceRepayFee,jdbcType=DOUBLE},
      </if>
      <if test="overdueFineFee != null">
        overdue_fine_fee = #{overdueFineFee,jdbcType=DOUBLE},
      </if>
      <if test="overdueFree != null">
        overdue_free = #{overdueFree,jdbcType=DOUBLE},
      </if>
      <if test="overdueInterestFree != null">
        overdue_interest_free = #{overdueInterestFree,jdbcType=DOUBLE},
      </if>
      <if test="pushStatus != null">
        push_status = #{pushStatus,jdbcType=TINYINT},
      </if>
      <if test="pushTime != null">
        push_time = #{pushTime,jdbcType=TIMESTAMP},
      </if>
      <if test="pushErrorMessage != null">
        push_error_message = #{pushErrorMessage,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hzed.easyget.persistence.auto.entity.Bill">
    update t_bills
    set bid_id = #{bidId,jdbcType=BIGINT},
      title = #{title,jdbcType=VARCHAR},
      periods = #{periods,jdbcType=TINYINT},
      repayment_time = #{repaymentTime,jdbcType=TIMESTAMP},
      repayment_corpus = #{repaymentCorpus,jdbcType=DECIMAL},
      repayment_interest = #{repaymentInterest,jdbcType=DOUBLE},
      status = #{status,jdbcType=TINYINT},
      mer_bill_no = #{merBillNo,jdbcType=VARCHAR},
      repayment_bill_no = #{repaymentBillNo,jdbcType=VARCHAR},
      real_repayment_time = #{realRepaymentTime,jdbcType=TIMESTAMP},
      real_repayment_corpus = #{realRepaymentCorpus,jdbcType=DECIMAL},
      real_repayment_interest = #{realRepaymentInterest,jdbcType=DECIMAL},
      overdue_mark = #{overdueMark,jdbcType=TINYINT},
      mark_overdue_time = #{markOverdueTime,jdbcType=TIMESTAMP},
      overdue_fine = #{overdueFine,jdbcType=DECIMAL},
      mark_bad_time = #{markBadTime,jdbcType=TIMESTAMP},
      notice_count_message = #{noticeCountMessage,jdbcType=INTEGER},
      notice_count_mail = #{noticeCountMail,jdbcType=INTEGER},
      notice_count_telphone = #{noticeCountTelphone,jdbcType=INTEGER},
      ips_status = #{ipsStatus,jdbcType=TINYINT},
      audit_free = #{auditFree,jdbcType=DOUBLE},
      service_free = #{serviceFree,jdbcType=DOUBLE},
      advance_repay_fee = #{advanceRepayFee,jdbcType=DOUBLE},
      overdue_fine_fee = #{overdueFineFee,jdbcType=DOUBLE},
      overdue_free = #{overdueFree,jdbcType=DOUBLE},
      overdue_interest_free = #{overdueInterestFree,jdbcType=DOUBLE},
      push_status = #{pushStatus,jdbcType=TINYINT},
      push_time = #{pushTime,jdbcType=TIMESTAMP},
      push_error_message = #{pushErrorMessage,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectOneByExample" parameterType="com.hzed.easyget.persistence.auto.entity.example.BillExample" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_bills
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    select
    <foreach collection="selective" item="column" separator=",">
      ${column.value}
    </foreach>
    from t_bills
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    insert into t_bills
    (bid_id, title, periods, repayment_time, repayment_corpus, repayment_interest, status, 
      mer_bill_no, repayment_bill_no, real_repayment_time, real_repayment_corpus, real_repayment_interest, 
      overdue_mark, mark_overdue_time, overdue_fine, mark_bad_time, notice_count_message, 
      notice_count_mail, notice_count_telphone, ips_status, audit_free, service_free, 
      advance_repay_fee, overdue_fine_fee, overdue_free, overdue_interest_free, push_status, 
      push_time, push_error_message)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.bidId,jdbcType=BIGINT}, #{item.title,jdbcType=VARCHAR}, #{item.periods,jdbcType=TINYINT}, 
        #{item.repaymentTime,jdbcType=TIMESTAMP}, #{item.repaymentCorpus,jdbcType=DECIMAL}, 
        #{item.repaymentInterest,jdbcType=DOUBLE}, #{item.status,jdbcType=TINYINT}, #{item.merBillNo,jdbcType=VARCHAR}, 
        #{item.repaymentBillNo,jdbcType=VARCHAR}, #{item.realRepaymentTime,jdbcType=TIMESTAMP}, 
        #{item.realRepaymentCorpus,jdbcType=DECIMAL}, #{item.realRepaymentInterest,jdbcType=DECIMAL}, 
        #{item.overdueMark,jdbcType=TINYINT}, #{item.markOverdueTime,jdbcType=TIMESTAMP}, 
        #{item.overdueFine,jdbcType=DECIMAL}, #{item.markBadTime,jdbcType=TIMESTAMP}, #{item.noticeCountMessage,jdbcType=INTEGER}, 
        #{item.noticeCountMail,jdbcType=INTEGER}, #{item.noticeCountTelphone,jdbcType=INTEGER}, 
        #{item.ipsStatus,jdbcType=TINYINT}, #{item.auditFree,jdbcType=DOUBLE}, #{item.serviceFree,jdbcType=DOUBLE}, 
        #{item.advanceRepayFee,jdbcType=DOUBLE}, #{item.overdueFineFee,jdbcType=DOUBLE}, 
        #{item.overdueFree,jdbcType=DOUBLE}, #{item.overdueInterestFree,jdbcType=DOUBLE}, 
        #{item.pushStatus,jdbcType=TINYINT}, #{item.pushTime,jdbcType=TIMESTAMP}, #{item.pushErrorMessage,jdbcType=VARCHAR}
        )
    </foreach>
  </insert>
  <insert id="batchInsertSelective" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    insert into t_bills (
    <foreach collection="selective" item="column" separator=",">
      ${column.value}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'bid_id' == column.value">
          #{item.bidId,jdbcType=BIGINT}
        </if>
        <if test="'title' == column.value">
          #{item.title,jdbcType=VARCHAR}
        </if>
        <if test="'periods' == column.value">
          #{item.periods,jdbcType=TINYINT}
        </if>
        <if test="'repayment_time' == column.value">
          #{item.repaymentTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'repayment_corpus' == column.value">
          #{item.repaymentCorpus,jdbcType=DECIMAL}
        </if>
        <if test="'repayment_interest' == column.value">
          #{item.repaymentInterest,jdbcType=DOUBLE}
        </if>
        <if test="'status' == column.value">
          #{item.status,jdbcType=TINYINT}
        </if>
        <if test="'mer_bill_no' == column.value">
          #{item.merBillNo,jdbcType=VARCHAR}
        </if>
        <if test="'repayment_bill_no' == column.value">
          #{item.repaymentBillNo,jdbcType=VARCHAR}
        </if>
        <if test="'real_repayment_time' == column.value">
          #{item.realRepaymentTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'real_repayment_corpus' == column.value">
          #{item.realRepaymentCorpus,jdbcType=DECIMAL}
        </if>
        <if test="'real_repayment_interest' == column.value">
          #{item.realRepaymentInterest,jdbcType=DECIMAL}
        </if>
        <if test="'overdue_mark' == column.value">
          #{item.overdueMark,jdbcType=TINYINT}
        </if>
        <if test="'mark_overdue_time' == column.value">
          #{item.markOverdueTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'overdue_fine' == column.value">
          #{item.overdueFine,jdbcType=DECIMAL}
        </if>
        <if test="'mark_bad_time' == column.value">
          #{item.markBadTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'notice_count_message' == column.value">
          #{item.noticeCountMessage,jdbcType=INTEGER}
        </if>
        <if test="'notice_count_mail' == column.value">
          #{item.noticeCountMail,jdbcType=INTEGER}
        </if>
        <if test="'notice_count_telphone' == column.value">
          #{item.noticeCountTelphone,jdbcType=INTEGER}
        </if>
        <if test="'ips_status' == column.value">
          #{item.ipsStatus,jdbcType=TINYINT}
        </if>
        <if test="'audit_free' == column.value">
          #{item.auditFree,jdbcType=DOUBLE}
        </if>
        <if test="'service_free' == column.value">
          #{item.serviceFree,jdbcType=DOUBLE}
        </if>
        <if test="'advance_repay_fee' == column.value">
          #{item.advanceRepayFee,jdbcType=DOUBLE}
        </if>
        <if test="'overdue_fine_fee' == column.value">
          #{item.overdueFineFee,jdbcType=DOUBLE}
        </if>
        <if test="'overdue_free' == column.value">
          #{item.overdueFree,jdbcType=DOUBLE}
        </if>
        <if test="'overdue_interest_free' == column.value">
          #{item.overdueInterestFree,jdbcType=DOUBLE}
        </if>
        <if test="'push_status' == column.value">
          #{item.pushStatus,jdbcType=TINYINT}
        </if>
        <if test="'push_time' == column.value">
          #{item.pushTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'push_error_message' == column.value">
          #{item.pushErrorMessage,jdbcType=VARCHAR}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
</mapper>