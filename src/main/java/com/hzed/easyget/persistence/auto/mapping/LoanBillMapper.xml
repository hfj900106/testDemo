<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hzed.easyget.persistence.auto.mapper.LoanBillMapper">
  <resultMap id="BaseResultMap" type="com.hzed.easyget.persistence.auto.entity.LoanBill">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="bid_id" jdbcType="BIGINT" property="bidId" />
    <result column="index_periods" jdbcType="INTEGER" property="indexPeriods" />
    <result column="repayment_time" jdbcType="TIMESTAMP" property="repaymentTime" />
    <result column="repayment_amount" jdbcType="DECIMAL" property="repaymentAmount" />
    <result column="settlement_time" jdbcType="TIMESTAMP" property="settlementTime" />
    <result column="real_repayment_amount" jdbcType="DECIMAL" property="realRepaymentAmount" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="is_partial repayment" jdbcType="BIT" property="isPartialRepayment" />
    <result column="create_by" jdbcType="BIGINT" property="createBy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_by" jdbcType="BIGINT" property="updateBy" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, bid_id, index_periods, repayment_time, repayment_amount, settlement_time, real_repayment_amount, 
    status, `is_partial repayment`, create_by, create_time, update_by, update_time, remark
  </sql>
  <select id="selectByExample" parameterType="com.hzed.easyget.persistence.auto.entity.example.LoanBillExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_loan_bill
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    select
    <if test="example.distinct">
      distinct
    </if>
    <foreach collection="selective" item="column" separator=",">
      ${column.value}
    </foreach>
    from t_loan_bill
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_loan_bill
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="BaseResultMap">
    select
    <foreach collection="selective" item="column" separator=",">
      ${column.value}
    </foreach>
    from t_loan_bill
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_loan_bill
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.hzed.easyget.persistence.auto.entity.example.LoanBillExample">
    delete from t_loan_bill
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hzed.easyget.persistence.auto.entity.LoanBill">
    insert into t_loan_bill (id, bid_id, index_periods, 
      repayment_time, repayment_amount, settlement_time, 
      real_repayment_amount, status, `is_partial repayment`, 
      create_by, create_time, update_by, 
      update_time, remark)
    values (#{id,jdbcType=BIGINT}, #{bidId,jdbcType=BIGINT}, #{indexPeriods,jdbcType=INTEGER}, 
      #{repaymentTime,jdbcType=TIMESTAMP}, #{repaymentAmount,jdbcType=DECIMAL}, #{settlementTime,jdbcType=TIMESTAMP}, 
      #{realRepaymentAmount,jdbcType=DECIMAL}, #{status,jdbcType=TINYINT}, #{isPartialRepayment,jdbcType=BIT}, 
      #{createBy,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=BIGINT}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hzed.easyget.persistence.auto.entity.LoanBill">
    insert into t_loan_bill
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="bidId != null">
        bid_id,
      </if>
      <if test="indexPeriods != null">
        index_periods,
      </if>
      <if test="repaymentTime != null">
        repayment_time,
      </if>
      <if test="repaymentAmount != null">
        repayment_amount,
      </if>
      <if test="settlementTime != null">
        settlement_time,
      </if>
      <if test="realRepaymentAmount != null">
        real_repayment_amount,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="isPartialRepayment != null">
        `is_partial repayment`,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="bidId != null">
        #{bidId,jdbcType=BIGINT},
      </if>
      <if test="indexPeriods != null">
        #{indexPeriods,jdbcType=INTEGER},
      </if>
      <if test="repaymentTime != null">
        #{repaymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="repaymentAmount != null">
        #{repaymentAmount,jdbcType=DECIMAL},
      </if>
      <if test="settlementTime != null">
        #{settlementTime,jdbcType=TIMESTAMP},
      </if>
      <if test="realRepaymentAmount != null">
        #{realRepaymentAmount,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="isPartialRepayment != null">
        #{isPartialRepayment,jdbcType=BIT},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hzed.easyget.persistence.auto.entity.example.LoanBillExample" resultType="java.lang.Long">
    select count(*) from t_loan_bill
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_loan_bill
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.bidId != null">
        bid_id = #{record.bidId,jdbcType=BIGINT},
      </if>
      <if test="record.indexPeriods != null">
        index_periods = #{record.indexPeriods,jdbcType=INTEGER},
      </if>
      <if test="record.repaymentTime != null">
        repayment_time = #{record.repaymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.repaymentAmount != null">
        repayment_amount = #{record.repaymentAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.settlementTime != null">
        settlement_time = #{record.settlementTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.realRepaymentAmount != null">
        real_repayment_amount = #{record.realRepaymentAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.isPartialRepayment != null">
        `is_partial repayment` = #{record.isPartialRepayment,jdbcType=BIT},
      </if>
      <if test="record.createBy != null">
        create_by = #{record.createBy,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null">
        update_by = #{record.updateBy,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_loan_bill
    set id = #{record.id,jdbcType=BIGINT},
      bid_id = #{record.bidId,jdbcType=BIGINT},
      index_periods = #{record.indexPeriods,jdbcType=INTEGER},
      repayment_time = #{record.repaymentTime,jdbcType=TIMESTAMP},
      repayment_amount = #{record.repaymentAmount,jdbcType=DECIMAL},
      settlement_time = #{record.settlementTime,jdbcType=TIMESTAMP},
      real_repayment_amount = #{record.realRepaymentAmount,jdbcType=DECIMAL},
      status = #{record.status,jdbcType=TINYINT},
      `is_partial repayment` = #{record.isPartialRepayment,jdbcType=BIT},
      create_by = #{record.createBy,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_by = #{record.updateBy,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hzed.easyget.persistence.auto.entity.LoanBill">
    update t_loan_bill
    <set>
      <if test="bidId != null">
        bid_id = #{bidId,jdbcType=BIGINT},
      </if>
      <if test="indexPeriods != null">
        index_periods = #{indexPeriods,jdbcType=INTEGER},
      </if>
      <if test="repaymentTime != null">
        repayment_time = #{repaymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="repaymentAmount != null">
        repayment_amount = #{repaymentAmount,jdbcType=DECIMAL},
      </if>
      <if test="settlementTime != null">
        settlement_time = #{settlementTime,jdbcType=TIMESTAMP},
      </if>
      <if test="realRepaymentAmount != null">
        real_repayment_amount = #{realRepaymentAmount,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="isPartialRepayment != null">
        `is_partial repayment` = #{isPartialRepayment,jdbcType=BIT},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hzed.easyget.persistence.auto.entity.LoanBill">
    update t_loan_bill
    set bid_id = #{bidId,jdbcType=BIGINT},
      index_periods = #{indexPeriods,jdbcType=INTEGER},
      repayment_time = #{repaymentTime,jdbcType=TIMESTAMP},
      repayment_amount = #{repaymentAmount,jdbcType=DECIMAL},
      settlement_time = #{settlementTime,jdbcType=TIMESTAMP},
      real_repayment_amount = #{realRepaymentAmount,jdbcType=DECIMAL},
      status = #{status,jdbcType=TINYINT},
      `is_partial repayment` = #{isPartialRepayment,jdbcType=BIT},
      create_by = #{createBy,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectOneByExample" parameterType="com.hzed.easyget.persistence.auto.entity.example.LoanBillExample" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_loan_bill
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    select
    <foreach collection="selective" item="column" separator=",">
      ${column.value}
    </foreach>
    from t_loan_bill
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
  <insert id="batchInsert" parameterType="map">
    insert into t_loan_bill
    (id, bid_id, index_periods, repayment_time, repayment_amount, settlement_time, real_repayment_amount, 
      status, `is_partial repayment`, create_by, create_time, update_by, update_time, 
      remark)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.bidId,jdbcType=BIGINT}, #{item.indexPeriods,jdbcType=INTEGER}, 
        #{item.repaymentTime,jdbcType=TIMESTAMP}, #{item.repaymentAmount,jdbcType=DECIMAL}, 
        #{item.settlementTime,jdbcType=TIMESTAMP}, #{item.realRepaymentAmount,jdbcType=DECIMAL}, 
        #{item.status,jdbcType=TINYINT}, #{item.isPartialRepayment,jdbcType=BIT}, #{item.createBy,jdbcType=BIGINT}, 
        #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateBy,jdbcType=BIGINT}, #{item.updateTime,jdbcType=TIMESTAMP}, 
        #{item.remark,jdbcType=VARCHAR})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" parameterType="map">
    insert into t_loan_bill (
    <foreach collection="selective" item="column" separator=",">
      ${column.value}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'id' == column.value">
          #{item.id,jdbcType=BIGINT}
        </if>
        <if test="'bid_id' == column.value">
          #{item.bidId,jdbcType=BIGINT}
        </if>
        <if test="'index_periods' == column.value">
          #{item.indexPeriods,jdbcType=INTEGER}
        </if>
        <if test="'repayment_time' == column.value">
          #{item.repaymentTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'repayment_amount' == column.value">
          #{item.repaymentAmount,jdbcType=DECIMAL}
        </if>
        <if test="'settlement_time' == column.value">
          #{item.settlementTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'real_repayment_amount' == column.value">
          #{item.realRepaymentAmount,jdbcType=DECIMAL}
        </if>
        <if test="'status' == column.value">
          #{item.status,jdbcType=TINYINT}
        </if>
        <if test="'is_partial repayment' == column.value">
          #{item.isPartialRepayment,jdbcType=BIT}
        </if>
        <if test="'create_by' == column.value">
          #{item.createBy,jdbcType=BIGINT}
        </if>
        <if test="'create_time' == column.value">
          #{item.createTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'update_by' == column.value">
          #{item.updateBy,jdbcType=BIGINT}
        </if>
        <if test="'update_time' == column.value">
          #{item.updateTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'remark' == column.value">
          #{item.remark,jdbcType=VARCHAR}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
</mapper>